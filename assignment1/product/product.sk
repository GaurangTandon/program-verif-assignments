/*
Problem Number: 1
=================

Task: Implement the productSK(M, N, P, Q, a, b) function.  This
functions returns cross product of given matricies 'a' and 'b', just
as the function product(M, N, P, Q, a, b).

This function should be a partial implementation - meaning that you
need to use generators to implement this function.

To test your function, run the following command in your shell.

-------------------------------------------------
$ python3 run.py 1 product.sk
-------------------------------------------------

If the compilation succeeds, you can see the resulting C++ code in the
file 'product.cpp'.
*/



/* The product(M, N, P, Q, a, b) function performs cross product of
   the matricies 'a' and 'b' and returns a matrix of dimensions M x Q.
   This is a complete implementation in sketch, which does not use any
   generators.
*/


int[M, Q] productSK(int M, int N, int P, int Q, int[M, N] a, int[P, Q] b) {
  assert P == N;
  int[{| M | N | P | Q |}][{| M | N | P | Q |}] prod;

  int sum;

  for (int i = 0; i < M; i++) {
    for (int j = 0; j < Q; j++) {
	    sum = ??;
	    for (int k = 0; k < P; k++) {
		    sum += a[i, k] * b[k, j];
		  }
	    prod[i][j] = sum;
	  }
  }

  return prod;
}


harness void multTest(){
  /* sketch won't compile if assertion fails */
	assert productSK(3, 2, 2, 3, {{1,2}, {1, 5}, {3, 4}}, {{1,2,3}, {0, 2, 1}}) == {{1, 6, 5}, {1, 12, 8}, {3, 14, 13}};
assert productSK(6, 1, 1, 1, {{4},{3},{3},{2},{1},{10}},{{8}}) == {{32},{24},{24},{16},{8},{80}};
assert productSK(1, 5, 5, 4, {{0,0,1,3,3}},{{8,9,0,8},{3,10,8,6},{3,7,9,4},{0,2,6,5},{4,2,3,5}}) == {{15,19,36,34}};
assert productSK(1, 1, 1, 4, {{1}},{{5,5,9,4}}) == {{5,5,9,4}};
assert productSK(1, 6, 6, 4, {{8,1,6,1,8,4}},{{10,9,5,9},{3,1,0,10},{3,4,1,3},{1,6,4,7},{10,5,2,5},{5,3,10,4}}) == {{202,155,106,163}};
assert productSK(6, 6, 6, 6, {{1,9,10,2,8,3},{2,7,6,4,10,8},{3,10,5,0,3,0},{5,6,4,1,3,9},{5,3,10,7,6,10},{7,2,4,2,3,8}},{{8,4,9,6,9,6},{5,3,2,8,7,1},{0,1,2,10,2,10},{6,9,1,6,6,9},{7,8,4,8,0,10},{1,10,8,4,10,5}}) == {{124,153,105,266,134,228},{153,231,152,264,183,255},{95,71,69,172,107,108},{106,165,150,184,191,160},{149,250,182,284,228,306},{107,160,153,166,177,172}};
assert productSK(1, 3, 3, 4, {{2,7,0}},{{4,8,2,8},{1,10,4,10},{8,9,3,2}}) == {{15,86,32,86}};
assert productSK(3, 2, 2, 5, {{8,0},{9,5},{7,0}},{{1,5,4,3,0},{3,9,1,1,7}}) == {{8,40,32,24,0},{24,90,41,32,35},{7,35,28,21,0}};
assert productSK(1, 5, 5, 2, {{2,10,7,8,2}},{{4,8},{9,6},{3,8},{3,4},{6,10}}) == {{155,184}};
assert productSK(6, 3, 3, 4, {{8,7,1},{3,3,1},{5,0,9},{8,3,9},{3,0,1},{10,0,3}},{{1,0,5,1},{8,3,4,10},{7,3,8,2}}) == {{71,24,76,80},{34,12,35,35},{68,27,97,23},{95,36,124,56},{10,3,23,5},{31,9,74,16}};
assert productSK(6, 5, 5, 5, {{7,3,7,6,3},{1,1,10,6,5},{6,6,7,0,10},{10,10,1,0,6},{5,1,3,3,3},{8,7,2,6,2}},{{4,7,3,1,7},{8,1,0,10,8},{0,1,3,2,6},{7,7,3,6,0},{2,6,0,6,4}}) == {{100,119,60,105,127},{64,90,51,97,95},{92,115,39,140,172},{132,117,33,148,180},{55,78,33,57,73},{134,119,48,130,132}};
assert productSK(4, 3, 3, 4, {{8,10,7},{2,3,4},{3,0,9},{8,0,5}},{{0,0,9,7},{8,8,2,0},{8,1,2,1}}) == {{136,87,106,63},{56,28,32,18},{72,9,45,30},{40,5,82,61}};
assert productSK(5, 1, 1, 6, {{3},{6},{1},{9},{3}},{{9,9,0,9,1,6}}) == {{27,27,0,27,3,18},{54,54,0,54,6,36},{9,9,0,9,1,6},{81,81,0,81,9,54},{27,27,0,27,3,18}};
assert productSK(6, 5, 5, 5, {{8,5,4,3,10},{5,3,4,6,2},{10,10,4,7,5},{1,0,7,9,9},{1,1,8,3,8},{4,2,5,1,3}},{{5,4,2,7,8},{4,9,10,8,0},{10,8,4,10,1},{2,4,1,1,8},{2,4,4,9,3}}) == {{126,161,125,229,122},{93,111,70,123,98},{154,210,163,242,155},{111,132,75,167,114},{111,121,79,170,64},{86,90,61,122,54}};
assert productSK(6, 3, 3, 2, {{10,10,4},{8,7,4},{0,1,10},{6,4,0},{0,5,2},{10,4,2}},{{7,8},{6,8},{0,1}}) == {{130,164},{98,124},{6,18},{66,80},{30,42},{94,114}};
assert productSK(1, 6, 6, 2, {{8,0,5,9,8,2}},{{6,2},{0,4},{5,0},{5,3},{10,3},{10,1}}) == {{218,69}};
assert productSK(3, 5, 5, 4, {{9,2,3,2,2},{6,0,2,5,6},{10,3,4,2,1}},{{6,0,7,3},{3,7,5,4},{3,3,0,10},{3,6,5,4},{1,4,5,10}}) == {{77,43,93,93},{63,60,97,118},{88,49,100,100}};
assert productSK(5, 4, 4, 6, {{8,5,0,1},{4,2,9,4},{0,1,9,6},{5,5,6,9},{8,1,6,9}},{{3,4,0,6,0,8},{8,10,10,3,5,6},{1,10,5,9,5,10},{1,4,8,4,10,6}}) == {{65,86,58,67,35,100},{41,142,97,127,95,158},{23,124,103,108,110,132},{70,166,152,135,145,184},{47,138,112,141,125,184}};
assert productSK(3, 4, 4, 6, {{4,8,2,3},{6,10,6,10},{2,9,9,4}},{{6,8,0,4,4,3},{6,9,9,10,5,7},{7,7,10,3,8,7},{2,10,1,4,8,10}}) == {{92,148,95,114,96,112},{158,280,160,182,202,230},{137,200,175,141,157,172}};
assert productSK(6, 5, 5, 3, {{1,3,10,4,3},{3,2,0,0,3},{7,9,1,7,6},{10,9,3,6,7},{6,3,2,10,0},{1,6,3,2,8}},{{7,0,8},{3,1,7},{2,7,10},{8,8,9},{5,7,9}}) == {{83,126,192},{42,23,65},{164,114,246},{186,127,290},{135,97,179},{87,99,170}};
assert productSK(6, 5, 5, 4, {{8,7,2,7,7},{4,3,10,4,8},{7,10,3,4,7},{1,4,3,4,5},{5,8,1,2,2},{3,6,2,3,1}},{{6,6,5,8},{7,6,0,3},{6,6,9,0},{9,6,7,0},{5,4,6,6}}) == {{207,172,149,127},{181,158,186,89},{201,172,132,128},{113,92,90,50},{120,104,60,76},{104,88,60,48}};
assert productSK(2, 4, 4, 5, {{4,7,7,6},{3,7,5,9}},{{6,3,3,0,7},{8,7,9,1,8},{5,8,4,6,4},{8,2,1,10,4}}) == {{163,129,109,109,136},{171,116,101,127,133}};
assert productSK(3, 4, 4, 5, {{0,6,10,0},{5,4,0,3},{0,2,2,6}},{{3,0,3,7,6},{9,2,7,3,3},{10,9,0,10,7},{8,3,5,6,6}}) == {{154,102,42,118,88},{75,17,58,65,60},{86,40,44,62,56}};
assert productSK(4, 4, 4, 3, {{8,0,7,7},{4,3,5,7},{4,1,0,10},{8,7,3,8}},{{7,2,7},{9,5,8},{4,5,4},{0,1,9}}) == {{84,58,147},{75,55,135},{37,23,126},{131,74,196}};
assert productSK(3, 4, 4, 4, {{6,6,2,6},{5,5,7,6},{9,1,2,8}},{{8,5,7,4},{9,10,2,6},{5,4,2,8},{8,4,4,1}}) == {{160,122,82,82},{168,127,83,112},{155,95,101,66}};
assert productSK(4, 1, 1, 2, {{9},{1},{2},{2}},{{3,8}}) == {{27,72},{3,8},{6,16},{6,16}};
assert productSK(3, 2, 2, 2, {{3,10},{5,5},{5,3}},{{2,6},{4,9}}) == {{46,108},{30,75},{22,57}};
assert productSK(1, 5, 5, 6, {{0,0,0,10,2}},{{4,7,7,5,7,5},{1,3,0,8,6,7},{2,3,1,6,7,9},{0,6,10,9,3,4},{5,0,8,10,3,6}}) == {{10,60,116,110,36,52}};
assert productSK(1, 4, 4, 2, {{6,8,6,0}},{{1,2},{8,3},{6,5},{10,0}}) == {{106,66}};
assert productSK(1, 2, 2, 3, {{1,7}},{{10,4,8},{0,5,3}}) == {{10,39,29}};
assert productSK(6, 1, 1, 5, {{10},{3},{7},{0},{9},{4}},{{5,7,0,10,6}}) == {{50,70,0,100,60},{15,21,0,30,18},{35,49,0,70,42},{0,0,0,0,0},{45,63,0,90,54},{20,28,0,40,24}};
assert productSK(6, 5, 5, 5, {{2,5,7,5,2},{9,8,6,6,3},{9,4,1,6,0},{7,6,4,2,3},{5,8,6,0,6},{4,5,1,4,5}},{{9,4,5,5,6},{4,5,4,5,8},{2,6,2,4,5},{9,2,1,6,1},{4,9,1,7,10}}) == {{105,103,51,107,112},{191,151,98,166,184},{153,74,69,105,97},{125,113,72,114,142},{113,150,75,131,184},{114,100,51,108,123}};
assert productSK(1, 5, 5, 5, {{2,1,0,0,9}},{{5,8,0,0,3},{9,2,6,8,5},{10,1,4,9,3},{3,4,1,7,1},{10,8,10,0,3}}) == {{109,90,96,8,38}};
assert productSK(2, 4, 4, 6, {{1,7,6,2},{6,7,9,0}},{{4,2,3,7,3,3},{1,10,3,5,9,5},{9,10,8,6,1,4},{6,2,8,2,7,5}}) == {{77,136,88,82,86,72},{112,172,111,131,90,89}};
assert productSK(4, 2, 2, 2, {{2,7},{7,6},{8,4},{4,8}},{{4,2},{4,1}}) == {{36,11},{52,20},{48,20},{48,16}};
assert productSK(6, 1, 1, 2, {{9},{6},{1},{2},{9},{7}},{{4,5}}) == {{36,45},{24,30},{4,5},{8,10},{36,45},{28,35}};
assert productSK(3, 2, 2, 6, {{5,3},{6,1},{10,0}},{{7,7,0,3,1,3},{9,7,7,3,3,5}}) == {{62,56,21,24,14,30},{51,49,7,21,9,23},{70,70,0,30,10,30}};
assert productSK(1, 5, 5, 5, {{6,5,0,0,3}},{{0,7,1,10,1},{5,2,10,9,0},{10,9,0,0,4},{4,9,3,9,3},{0,9,5,6,5}}) == {{25,79,71,123,21}};
assert productSK(5, 1, 1, 5, {{4},{1},{5},{9},{3}},{{2,8,10,9,2}}) == {{8,32,40,36,8},{2,8,10,9,2},{10,40,50,45,10},{18,72,90,81,18},{6,24,30,27,6}};
assert productSK(2, 3, 3, 1, {{10,3,10},{9,3,2}},{{9},{7},{4}}) == {{151},{110}};
assert productSK(6, 3, 3, 6, {{4,0,7},{0,6,10},{2,8,9},{5,2,2},{6,1,10},{1,10,0}},{{8,10,5,0,7,10},{8,9,10,4,4,9},{8,8,0,5,7,9}}) == {{88,96,20,35,77,103},{128,134,60,74,94,144},{152,164,90,77,109,173},{72,84,45,18,57,86},{136,149,40,54,116,159},{88,100,105,40,47,100}};
}
